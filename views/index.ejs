<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="viewport" content="user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimal-ui" />
    <meta name="apple-mobile-web-app-status-bar-style" content="yes" />
    <title><%= title %></title>
    
    <!-- Bower Libs -->
    <!-- include SockJS -->
    <script src='/lib/sockjs/sockjs.js'></script>
    <!-- include the client library -->    
    <script src="lib/stomp-websocket/lib/stomp.js"></script>
    <script src="lib/jquery/dist/jquery.min.js"></script>
    <script src="lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="lib/angular/angular.min.js"></script>
    <script src="lib/angular-route/angular-route.min.js"></script>
    <script src="lib/angular-resource/angular-resource.min.js"></script>
    <script src="lib/angular-chosen-localytics/dist/angular-chosen.min.js"></script>
    <script src="lib/chosen/chosen.jquery.min.js"></script>
    <script src="lib/mobile-angular-ui/dist/js/mobile-angular-ui.min.js"></script>

    <!-- Bower stylesheets -->
    <link rel="stylesheet" href="lib/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="lib/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="lib/animate.css/animate.min.css">
    <link rel="stylesheet" href="lib/chosen/chosen.css">
    <link rel="stylesheet" href="lib/mobile-angular-ui/dist/css/mobile-angular-ui-hover.min.css" />
    <link rel="stylesheet" href="lib/mobile-angular-ui/dist/css/mobile-angular-ui-base.min.css" />
    <link rel="stylesheet" href="lib/mobile-angular-ui/dist/css/mobile-angular-ui-desktop.min.css" />

    <!-- Custom stylesheets -->
    <link rel='stylesheet' href='/stylesheets/style.css' />

    <!-- Custom libs -->

  </head>
  <body ng-app="DartApp">
    <div class="app">
      <div class="navbar navbar-app navbar-absolute-top">
          <div class="navbar-brand navbar-brand-center" ui-yield-to="title">
            <span>Dart App</span>
          </div>
          <div class="btn-group pull-left">
            <div class="btn btn-navbar">
              <a href="/"><i class="fa fa-home fa-fw" aria-hidden="true"></i>&nbsp; Home</a>
            </div>
          </div>
          
          <div class="btn-group pull-right">
              <div class="btn btn-navbar" ui-yield-to="navbarAction"></div>
          </div>
      </div>
      <div class="sidebar sidebar-left">
        <div class="scrollable">
          <h1 class="scrollable-header app-name">My App</h1>
          <div class="scrollable-content">
            <div class="list-group" ui-turn-off='uiSidebarLeft'>
              <a class="list-group-item" href="#/link1">Link 1
                <i class="fa fa-chevron-right pull-right"></i></a>
              <a class="list-group-item" href="#/link2">Link 2
                <i class="fa fa-chevron-right pull-right"></i></a>
            </div>
          </div>
        </div>
      </div>
      <!-- <div class="navbar navbar-app navbar-absolute-bottom"></div> -->
      <!-- ANGULAR DYNAMIC CONTENT -->
      <div class='app-body'>
        <ng-view class='app-content'></ng-view>
      </div>
    </div>
    <div ui-yield-to="modals"></div>
  </body>
</html>

<!-- Template -->
<script type="text/ng-template" id="/players.html">
  <div class="scrollable">
    <div class="scrollable-content section">
      <div ng-controller="LightController">
        Light
        <ui-switch ng-model="lightSwitch.status" ng-change="changeStatus()"></ui-switch>
      </div>
      <br>

      <div class="">
        <div class="row col-md-6 col-md-offset-2 custyle">
          <table class="table table-striped table-bordered table-condensed custab">
            <thead>
              <tr>
                <th>Name</th>
                <th>Average</th>
                <th>Wins</th>
                <th class="text-center">Action</th>
              </tr>
              <tr>
                <th>
                  <div class="input-group margin-bottom-sm">
                    <input class="form-control" type="text" ng-model="search.name" placeholder="Search Player">
                  </div>
                </th>
                <th></th><th></th><th></th>
              </tr>
            </thead>
            <tr ng-repeat="player in players | filter: search">
              <td>
                <a ng-show="!editing[$index]" href="#!/player/{{player._id}}">{{player.name}}</a>
                <div class="input-group margin-bottom-sm">
                  <input class="form-control" ng-show="editing[$index]" type="text" ng-model="player.name">
                </div>
              </td>
              <td>{{player.average}}</td>
              <td>{{player.wins}}</td>
              <td class="text-center">
                <a class="btn btn-info btn-xs" ng-show="!editing[$index]" ng-click="edit($index)"><span class="glyphicon glyphicon-edit"></span> Edit</a>
                <a class="btn btn-danger btn-xs" ng-show="!editing[$index]"ng-click="remove($index)"><span class="fa fa-trash-o"></span> Del</a>
                <a class="btn btn-default btn-xs" ng-show="editing[$index]" ng-click="update($index)"><span class="fa fa-refresh" aria-hidden="true"></span> Update</a>
                <a class="btn btn-default btn-xs" ng-show="editing[$index]" ng-click="cancel($index)"><span class="fa fa-times" aria-hidden="true"></span>Cancel</a>
              </td>
            </tr>
          </table>
          <div class="input-group margin-bottom-sm">
              <span class="input-group-addon"><i class="fa fa-plus fa-user-o fa-fw" aria-hidden="true"></i><i class="fa fa-user-o fa-fw" aria-hidden="true"></i></span>
              <input class="form-control" type="text" ng-model="newPlayer" placeholder="New Player">
              <a class="input-group-addon" ng-click="save()">Create</a>
          </div>
        </div>
      </div>
      <div ui-content-for="navbarAction">
        <div ng-show="editing.length < 1">
          <a ng-click="newgame()"><i class="fa fa-plus"></i>&nbsp; New Game</a>
        </div>
      </div>
    </div>
  </div>
</script>

<script type="text/ng-template" id="/playerDetails.html">
  <div class="scrollable">
    <div class="scrollable-content section">
      <div ui-content-for="title">
          <span>{{ player.name }}</span>
      </div>
      average: <textarea ng-model="player.average"></textarea><br>
      wins: <textarea ng-model="player.wins"></textarea><br><br>

      <button ng-click="update()">Update</button>
      <button ng-click="remove()">Remove</button>
      <a href="/">Cancel</a>
    </div>
  </div>
</script>

<script type="text/ng-template" id="/newGame.html">
  <div class="scrollable">
    <div class="scrollable-content section">
      <div ui-content-for="title">
          <span>New Game</span>
      </div>
      <form name="form" role="form" novalidate class="form-horizontal">
        <div class="form-group">
          <label class="control-label col-sm-2" for="players">Select Players:</label>
          <div class="col-sm-4">
            <select multiple
                    chosen
                    required
                    name="players"
                    placeholder_text_multiple="'Select Players'"
                    no_results_text="'Could not find any players :('"
                    ng-model="game.players"
                    ng-options="player._id as player.name for player in players"
                    class="form-control"
                    id="players">
            </select>
            <div ng-show="form.$submitted || form.players.$touched">
                <p ng-show="form.players.$error.required" class="help-block">Error: Please select player</p>
            </div>
          </div>
        </div>

        <div class="form-group">
          <lable class="control-label col-sm-2" for="points">Points:</lable>
          <div class="col-sm-4">
            <select class="form-control" name="points" id="points" chosen required disable-search="true" ng-model="game.gamepoints" convert-to-number placeholder-text-single="'Select game points'">
              <option value="301">301</option>
              <option value="501">501</option>
              <option value="701">701</option>
            </select>
          </div>
        </div>
        <div class="form-group">
          <div class="col-sm-offset-2 col-sm-6">
              <span class="button-checkbox">
                  <button type="button" class="btn" data-color="primary">Double in</button>
                  <input class="form-control hidden" id="doublein" name="doublein" type="checkbox" ng-model="game.doublein">
              </span>
          </div>
        </div>
        <div class="form-group">
          <div class="col-sm-offset-2 col-sm-6">
              <span class="button-checkbox">
                  <button type="button" class="btn" data-color="primary">Double out</button>
                  <input class="form-control hidden" id="doubleout" name="doubleout" type="checkbox" ng-model="game.doubleout" checked>
              </span>
          </div>
        </div>
        <div class="form-group">
          <div class="col-sm-offset-2 col-sm-6">
              <span class="button-checkbox">
                  <button type="button" class="btn" data-color="primary">Elimination</button>
                  <input class="form-control hidden" id="elimination" name="elimination" type="checkbox" ng-model="game.elimination">
              </span>
          </div>
        </div>
        <div class="form-group">
          <div class="col-sm-offset-2 col-sm-6">
              <input class="btn btn-primary" type="submit" ng-click="create()" value="Create"/>
              <a class="btn btn-danger" href="/">Cancel</a>
          </div>
        </div>
      </form>
    <div/>
  </div>
</script>

<script type="text/ng-template" id="/game.html">
  <div class="scrollable">
    <div class="scrollable-content section" >
      <div ui-content-for="title">
          <span>Game</span>
      </div>
      <audio id="win">
          <source src="sounds/Siegermelodie.ogg" type="audio/ogg">
          <source src="sounds/Siegermelodie.mp3" type="audio/mpeg"> 
      </audio>
      <table class="table" show-filter="true">
        <tr ng-repeat="player in players">
          <td title="'Name'" filter="{ name: 'text'}" sortable="'name'">
            {{player.name}}</td>
          <td title="'Points'" filter="{ points: 'number'}" sortable="'points'">
            {{player.points}}</td>
          <td ng-if="player.turn ""title="'Turn'" filter="{ turn: 'boolean'}" sortable="'turn'">
            &larr;</td>
          <td ng-repeat="score in player.round" "title="'Score'" filter="{ value: 'number'}" sortable="'value'">
            {{score.value}}</td>
        </tr>
      </table>
      <div ui-content-for="navbarAction">
          <i class="fa fa-times" aria-hidden="true"></i>
          <a ng-click="cancle()">Abandon</a>
      </div>
    <div/>
  </div>
</script>


<script>
  angular.module('DartApp', ['ngRoute', 'ngResource', 'localytics.directives', 'mobile-angular-ui'])
    //---------------
    // Services
    //---------------
    .factory('Players', ['$resource', function($resource){
      return $resource('/players/:id', null, {
        'update': { method:'PUT' }
      });
    }])
    .factory('Game', ['$resource', function($resource){
      return $resource('/game', null, {
        'getPlayers': {method:'GET', isArray:true, url:'/game/players'}
      });
    }])
    .factory('Command', ['$resource', function($resource){
      return $resource('/command', null);
    }])
    //---------------
    // Controllers
    //---------------
    .controller('LightController', ['$scope', 'Command', function($scope, Command) {
      $scope.init = function(){
        $scope.lightSwitch.status = false;
      }
      $scope.changeStatus = function(){
        Command.get({switch: $scope.lightSwitch.status})
      }
    }])
    .controller('PlayerController', ['$scope', 'Players', '$location', function ($scope, Players, $location) {
      $scope.editing = [];
      $scope.players = Players.query();
      $scope.save = function(){
        if(!$scope.newPlayer || $scope.newPlayer.length < 1) return;
        var player = new Players({ name: $scope.newPlayer });
        player.$save(function(){
          $scope.players.push(player);
          $scope.newPlayer = ''; // clear textbox
        });
      }
      $scope.update = function(index){
        var player = $scope.players[index];
        Players.update({id: player._id}, player);
        $scope.editing = [];
      }
      $scope.edit = function(index){
        $scope.editing[index] = angular.copy($scope.players[index]);
      }
      $scope.cancel = function(index){
        $scope.players[index] = angular.copy($scope.editing[index]);
        $scope.editing = [];
      }
      $scope.remove = function(index){
        var player = $scope.players[index];
        Players.remove({id: player._id}, function(){
          $scope.players.splice(index, 1);
        });
      }
      $scope.newgame = function(){
        $location.url('/newGame');
      }
    }])
    .controller('PlayerDetailCtrl', ['$scope', '$routeParams', 'Players', '$location', function ($scope, $routeParams, Players, $location) {
      $scope.player = Players.get({id: $routeParams.id });
      $scope.remove = function(){
        Players.remove({id: $scope.player._id}, function(){
          $location.url('/');
        });
      }
      $scope.update = function(){
        Players.update({id: $scope.player._id}, $scope.player, function(){
          $location.url('/');
        });
      }
    }])
    .controller('NewGameController', ['$scope', 'Players', 'Game', 'Command', '$location', function ($scope, Players, Game, Command, $location) {
      
      $scope.players = Players.query();
      $scope.game = {
        gamepoints : '501',
        doublein  : false,
        doubleout : true,
        elimination: false
      };
      angular.element(function () {
        angular.element('.button-checkbox').each(function () {
  
          // Settings
          var $widget = angular.element(this),
              $button = $widget.find('button'),
              $checkbox = $widget.find('input:checkbox'),
              color = $button.data('color'),
              settings = {
                  on: {
                      icon: 'glyphicon glyphicon-check'
                  },
                  off: {
                      icon: 'glyphicon glyphicon-unchecked'
                  }
              };
      
          // Event Handlers
          $button.on('click', function () {
              $checkbox.prop('checked', !$checkbox.is(':checked'));
              $checkbox.triggerHandler('change');
              $checkbox.triggerHandler('click');
              updateDisplay();
          });
          $checkbox.on('change', function () {
              updateDisplay();
          });
      
          // Actions
          function updateDisplay() {
              var isChecked = $checkbox.is(':checked');
      
              // Set the button's state
              $button.data('state', (isChecked) ? "on" : "off");
      
              // Set the button's icon
              $button.find('.state-icon')
                  .removeClass()
                  .addClass('state-icon ' + settings[$button.data('state')].icon);
      
              // Update the button's color
              if (isChecked) {
                  $button
                      .removeClass('btn-default')
                      .addClass('btn-' + color + ' active');
                  $checkbox
                      .removeClass('ng-empty')
                      .addClass('ng-not-empty');
              }
              else {
                  $button
                      .removeClass('btn-' + color + ' active')
                      .addClass('btn-default');
                  $checkbox
                      .removeClass('ng-not-empty')
                      .addClass('ng-empty');
              }
          }
          // Initialization
          function init() {
              updateDisplay();
              // Inject the icon if applicable
              if ($button.find('.state-icon').length == 0) {
                  $button.prepend('<i class="state-icon ' + settings[$button.data('state')].icon + '"></i> ');
              }
          }
          init();
        });
      });
      
      $scope.create = function(){
        if (!$scope.game.players) return;
        Command.get({game: true})
        Game.delete();
        for (var index = 0; index < $scope.game.players.length; index++){
          Players.update({id: $scope.game.players[index]}, {points: $scope.game.gamepoints});
        }
        var game = new Game({ gamepoints: $scope.game.gamepoints, doublein: $scope.game.doublein, doubleout: $scope.game.doubleout, elimination: $scope.game.elimination, players : $scope.game.players });
        game.$save(function(){
          $location.url('/game');
        });
      }
    }])
    .controller('GameController', ['$scope', 'Players', 'Game', 'Command', '$location', function ($scope, Players, Game, Command, $location) {
      $scope.players = Game.getPlayers();
      if (location.search == '?ws') {
        var ws = new WebSocket('ws://' + window.location.hostname + ':15674/ws');
      } else {
        var ws = new SockJS('http://' + window.location.hostname + ':15674/stomp');
      }
      var client = Stomp.over(ws);
      var on_connect = function() {
        console.log('connected');
        id = client.subscribe("/topic/score", function(d) {
            p = d.body
            p = (p === undefined) ? '' : JSON.parse(p);
            $scope.players.splice(0,$scope.players.length)
            $scope.players = p;
            $scope.$apply()
            for(i=0; i < p.length; i++) {
              if (p[i].points == 0) {
                document.getElementById('win').play();
              }
            }
        });
      };
      var on_error =  function() {
        console.log('error');
      };
      client.connect('guest', 'guest', on_connect, on_error, '/');
      $scope.cancle = function(){
        client.disconnect();
        Game.delete();
        for (var index = 0; index < $scope.players.length; index++){
          Players.update({id: $scope.players[index]._id}, {points: 0, turn: false});
        }
        $location.url('/');
        Command.get({game: false});
      }

    }])
    //---------------
    // Routes
    //---------------
    .config(['$routeProvider', function ($routeProvider) {
      $routeProvider
        .when('/', {
          templateUrl: '/players.html',
          controller: 'PlayerController'
        })
        .when('/player/:id', {
          templateUrl: '/playerDetails.html',
          controller: 'PlayerDetailCtrl'
        })
        .when('/newGame', {
          templateUrl: '/newGame.html',
          controller: 'NewGameController'
        })
        .when('/game', {
          templateUrl: '/game.html',
          controller: 'GameController'
        });
    }]);
</script>